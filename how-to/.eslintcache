[{"/Users/coco/Desktop/Lambda/pt_24/front-end/how-to/src/index.js":"1","/Users/coco/Desktop/Lambda/pt_24/front-end/how-to/src/App.js":"2","/Users/coco/Desktop/Lambda/pt_24/front-end/how-to/src/reportWebVitals.js":"3","/Users/coco/Desktop/Lambda/pt_24/front-end/how-to/src/Components/Register.js":"4","/Users/coco/Desktop/Lambda/pt_24/front-end/how-to/src/Components/SubmitPost.js":"5"},{"size":500,"mtime":1611882215848,"results":"6","hashOfConfig":"7"},{"size":658,"mtime":1612126905901,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1611882215849,"results":"9","hashOfConfig":"7"},{"size":5265,"mtime":1612231229508,"results":"10","hashOfConfig":"7"},{"size":2202,"mtime":1612233428394,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"26tl5e",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/coco/Desktop/Lambda/pt_24/front-end/how-to/src/index.js",[],["25","26"],"/Users/coco/Desktop/Lambda/pt_24/front-end/how-to/src/App.js",["27"],"import './App.css';\nimport Register from \"./Components/Register\"\nimport SubmitPost from \"./Components/SubmitPost\"\n\nfunction App() {\n  return (\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //   </header>\n    // </div>\n    <SubmitPost />\n  );\n}\n\nexport default App;\n","/Users/coco/Desktop/Lambda/pt_24/front-end/how-to/src/reportWebVitals.js",[],"/Users/coco/Desktop/Lambda/pt_24/front-end/how-to/src/Components/Register.js",["28"],"import React, { useState, useEffect } from \"react\";\nimport * as yup from \"yup\";\nimport { Container, Form, ButtonToggle } from \"reactstrap\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n\nconst CustomBox = styled.div`\n  width: 400px;\n  margin: 0px auto;\n  border-radius: 10px;\n  padding: 40px;\n  border: 10px;\n`;\n\nconst RegisterPrompt = styled.h2`\n  color: purple;\n  width: 100%;\n  margin-bottom: 20px;\n  padding-right: 75px;\n`;\n\nconst Inputs = styled.div`\n  margin-bottom: 18px;\n  input {\n  width: 275px;\n  }\n`;\n\nconst Register = () => {\n  const [formData, setFormData] = useState({\n    fname: \"\",\n    lname: \"\",\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    userRole: \"\",\n  });\n\n  const [errors, setErrors] = useState({\n    fname: \"\",\n    lname: \"\",\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    userRole: \"\",\n  });\n\n  const [isButtonDisabled, setIsButtonDisabled] = useState(true);\n\n  const validateChange = (e) => {\n    e.persist();\n    yup\n      .reach(formSchema, e.target.name)\n      .validate(e.target.value)\n      .then((valid) => {\n        setErrors({ ...errors, [e.target.name]: \"\" });\n      })\n      .catch((err) => {\n        setErrors({ ...errors, [e.target.name]: err.errors[0] });\n      });\n  };\n\n  const onInputChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n    validateChange(e);\n  };\n\n  const formSchema = yup.object().shape({\n    fname: yup.string().required(\"Frist name is required\"),\n    lname: yup.string().required(\"Last name is required\"),\n    email: yup\n      .string()\n      .email(\"Not a valid email\")\n      .required(\"Email is required\"),\n    username: yup.string().required(\"Username is required\"),\n    password: yup.string().required(\"Please create a password\"),\n    confirmPassword: yup.string().required(\"Please confirm password\"),\n  });\n\n  useEffect(() => {\n    formSchema.isValid(formData).then((valid) => {\n      console.log(\"valid?\", valid);\n      setIsButtonDisabled(!valid);\n    });\n  }, [formData, formSchema]);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    formSchema.isValid(formData).then((valid) => {\n      if (!valid) return;\n    });\n    if (formData.password !== formData.confirmPassword) {\n      setErrors({ ...errors, confrimPassword: \"Passwords do not match\" });\n      return;\n    }\n  };\n\n  return (\n    <CustomBox>\n      <Container>\n        <div>\n          <Form onSubmit={onSubmit}>\n            <RegisterPrompt>Register Now!</RegisterPrompt>\n            <label htmlFor=\"fname\">\n              First Name\n              <Inputs>\n                <input\n                  onChange={onInputChange}\n                  name=\"fname\"\n                  id=\"fname\"\n                  type=\"text\"\n                  value={formData.fname}\n                  placeholder=\"First name\"\n                />\n              </Inputs>\n            </label>\n\n            <label htmlFor=\"lname\">\n              Last Name\n              <Inputs>\n                <input\n                  onChange={onInputChange}\n                  name=\"lname\"\n                  id=\"lname\"\n                  type=\"text\"\n                  value={formData.lname}\n                  placeholder=\"Lirst name\"\n                />\n              </Inputs>\n            </label>\n            <label htmlFor=\"email\">\n              Email\n              <Inputs>\n                <input\n                  onChange={onInputChange}\n                  name=\"email\"\n                  id=\"email\"\n                  type=\"email\"\n                  value={formData.email}\n                  placeholder=\"Email address\"\n                />\n              </Inputs>\n            </label>\n            <label htmlFor=\"username\">\n              Create Username\n              <Inputs>\n                <input\n                  onChange={onInputChange}\n                  name=\"username\"\n                  id=\"username\"\n                  type=\"text\"\n                  value={formData.username}\n                  placeholder=\"Username\"\n                />\n              </Inputs>\n            </label>\n            <label htmlFor=\"password\">\n              Create Password\n              <Inputs>\n                <input\n                  onChange={onInputChange}\n                  name=\"password\"\n                  id=\"password\"\n                  type=\"password\"\n                  value={formData.password}\n                  placeholder=\"Enter password\"\n                />\n              </Inputs>\n            </label>\n            <label htmlFor=\"confirmPassword\">\n              Confirm Password\n              <Inputs>\n                <input\n                  onChange={onInputChange}\n                  name=\"confirmPassword\"\n                  id=\"confirmPassword\"\n                  type=\"password\"\n                  value={formData.confirmPassword}\n                  placeholder=\"Re-enter password\"\n                />\n              </Inputs>\n            </label>\n            <ButtonToggle\n              disabled={isButtonDisabled}\n              color=\"info\"\n              type=\"submit\"\n            >\n              Submit\n            </ButtonToggle>\n          </Form>\n        </div>\n      </Container>\n    </CustomBox>\n  );\n};\n\nexport default Register;\n","/Users/coco/Desktop/Lambda/pt_24/front-end/how-to/src/Components/SubmitPost.js",["29","30","31","32","33","34","35"],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":2,"column":8,"nodeType":"42","messageId":"43","endLine":2,"endColumn":16},{"ruleId":"40","severity":1,"message":"44","line":5,"column":8,"nodeType":"42","messageId":"43","endLine":5,"endColumn":13},{"ruleId":"40","severity":1,"message":"45","line":2,"column":13,"nodeType":"42","messageId":"43","endLine":2,"endColumn":16},{"ruleId":"40","severity":1,"message":"44","line":3,"column":8,"nodeType":"42","messageId":"43","endLine":3,"endColumn":13},{"ruleId":"40","severity":1,"message":"46","line":30,"column":10,"nodeType":"42","messageId":"43","endLine":30,"endColumn":17},{"ruleId":"40","severity":1,"message":"47","line":30,"column":19,"nodeType":"42","messageId":"43","endLine":30,"endColumn":29},{"ruleId":"40","severity":1,"message":"48","line":35,"column":10,"nodeType":"42","messageId":"43","endLine":35,"endColumn":20},{"ruleId":"40","severity":1,"message":"49","line":35,"column":22,"nodeType":"42","messageId":"43","endLine":35,"endColumn":35},{"ruleId":"40","severity":1,"message":"50","line":42,"column":28,"nodeType":"42","messageId":"43","endLine":42,"endColumn":47},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'Register' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'yup' is defined but never used.","'newPost' is assigned a value but never used.","'setNewPost' is assigned a value but never used.","'postErrors' is assigned a value but never used.","'setPostErrors' is assigned a value but never used.","'setIsButtonDisabled' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]