[{"/Users/coco/Desktop/Lambda/pt_24/front-end/how-to/src/index.js":"1","/Users/coco/Desktop/Lambda/pt_24/front-end/how-to/src/reportWebVitals.js":"2","/Users/coco/Desktop/Lambda/pt_24/front-end/how-to/src/App.js":"3","/Users/coco/Desktop/Lambda/pt_24/front-end/how-to/src/Components/Main.js":"4","/Users/coco/Desktop/Lambda/pt_24/front-end/how-to/src/Components/Register.js":"5","/Users/coco/Desktop/Lambda/pt_24/front-end/how-to/src/Components/SubmitPost.js":"6"},{"size":567,"mtime":1612234957537,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1611882215849,"results":"9","hashOfConfig":"8"},{"size":865,"mtime":1612317029073,"results":"10","hashOfConfig":"8"},{"size":2382,"mtime":1612234957534,"results":"11","hashOfConfig":"8"},{"size":3033,"mtime":1612316870695,"results":"12","hashOfConfig":"8"},{"size":2787,"mtime":1612317643821,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"26tl5e",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/coco/Desktop/Lambda/pt_24/front-end/how-to/src/index.js",[],["28","29"],"/Users/coco/Desktop/Lambda/pt_24/front-end/how-to/src/reportWebVitals.js",[],"/Users/coco/Desktop/Lambda/pt_24/front-end/how-to/src/App.js",["30","31"],"/Users/coco/Desktop/Lambda/pt_24/front-end/how-to/src/Components/Main.js",[],"/Users/coco/Desktop/Lambda/pt_24/front-end/how-to/src/Components/Register.js",["32"],"import React, { useState, useEffect } from \"react\";\nimport * as yup from \"yup\";\nimport { Container, Form, ButtonToggle } from \"reactstrap\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n\nconst CustomBox = styled.div`\n  width: 400px;\n  margin: 0px auto;\n  border-radius: 10px;\n  padding: 40px;\n  border: 10px;\n`;\n\nconst RegisterPrompt = styled.h2`\n  color: purple;\n  width: 100%;\n  margin-bottom: 20px;\n  padding-right: 75px;\n`;\n\nconst Inputs = styled.div`\n  margin-bottom: 18px;\n  input {\n    width: 275px;\n  }\n`;\n\nconst Register = () => {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const [errors, setErrors] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const [isButtonDisabled, setIsButtonDisabled] = useState(true);\n\n  const validateChange = (e) => {\n    e.persist();\n    yup\n      .reach(formSchema, e.target.name)\n      .validate(e.target.value)\n      .then((valid) => {\n        setErrors({ ...errors, [e.target.name]: \"\" });\n      })\n      .catch((err) => {\n        setErrors({ ...errors, [e.target.name]: err.errors[0] });\n      });\n  };\n\n  const onInputChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n    validateChange(e);\n  };\n\n  const formSchema = yup.object().shape({\n    username: yup.string().required(\"Username is required\"),\n    password: yup.string().required(\"Please create a password\"),\n  });\n\n  useEffect(() => {\n    formSchema.isValid(formData).then((valid) => {\n      console.log(\"valid?\", valid);\n      setIsButtonDisabled(!valid);\n    });\n  }, [formData, formSchema]);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    formSchema.isValid(formData).then((valid) => {\n      if (!valid) return;\n    });\n  };\n\n  return (\n    <CustomBox>\n      <Container>\n        <div>\n          <Form onSubmit={onSubmit}>\n            <RegisterPrompt>Register Now!</RegisterPrompt>\n\n            <label htmlFor=\"username\">\n              Create Username\n              <Inputs>\n                <input\n                  onChange={onInputChange}\n                  name=\"username\"\n                  id=\"username\"\n                  type=\"text\"\n                  value={formData.username}\n                  placeholder=\"Username\"\n                />\n              </Inputs>\n            </label>\n            <label htmlFor=\"password\">\n              Create Password\n              <Inputs>\n                <input\n                  onChange={onInputChange}\n                  name=\"password\"\n                  id=\"password\"\n                  type=\"password\"\n                  value={formData.password}\n                  placeholder=\"Password\"\n                />\n              </Inputs>\n            </label>\n\n            <ButtonToggle\n              disabled={isButtonDisabled}\n              color=\"info\"\n              type=\"submit\"\n            >\n              Submit\n            </ButtonToggle>\n          </Form>\n        </div>\n      </Container>\n    </CustomBox>\n  );\n};\n\nexport default Register;\n","/Users/coco/Desktop/Lambda/pt_24/front-end/how-to/src/Components/SubmitPost.js",["33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":4,"column":8,"nodeType":"40","messageId":"41","endLine":4,"endColumn":12},{"ruleId":"38","severity":1,"message":"42","line":5,"column":8,"nodeType":"40","messageId":"41","endLine":5,"endColumn":16},{"ruleId":"38","severity":1,"message":"43","line":5,"column":8,"nodeType":"40","messageId":"41","endLine":5,"endColumn":13},{"ruleId":"38","severity":1,"message":"43","line":3,"column":8,"nodeType":"40","messageId":"41","endLine":3,"endColumn":13},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'Main' is defined but never used.","Identifier","unusedVar","'Register' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]